//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Excluder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_Excluder")
#ifdef RESTRICT_Excluder
#define INCLUDE_ALL_Excluder 0
#else
#define INCLUDE_ALL_Excluder 1
#endif
#undef RESTRICT_Excluder

#if !defined (GsonExcluder_) && (INCLUDE_ALL_Excluder || defined(INCLUDE_GsonExcluder))
#define GsonExcluder_

#define RESTRICT_TypeAdapterFactory 1
#define INCLUDE_GsonTypeAdapterFactory 1
#include "TypeAdapterFactory.h"

@class GsonGson;
@class GsonTypeAdapter;
@class GsonTypeToken;
@class IOSClass;
@class IOSIntArray;
@class JavaLangReflectField;
@protocol GsonExclusionStrategy;

@interface GsonExcluder : NSObject < GsonTypeAdapterFactory, NSCopying >

+ (GsonExcluder *)DEFAULT;

#pragma mark Public

- (instancetype)init;

- (GsonTypeAdapter *)createWithGsonGson:(GsonGson *)gson
                      withGsonTypeToken:(GsonTypeToken *)type;

- (GsonExcluder *)disableInnerClassSerialization;

- (jboolean)excludeClassWithIOSClass:(IOSClass *)clazz
                         withBoolean:(jboolean)serialize;

- (jboolean)excludeFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                     withBoolean:(jboolean)serialize;

- (GsonExcluder *)excludeFieldsWithoutExposeAnnotation;

- (GsonExcluder *)withExclusionStrategyWithGsonExclusionStrategy:(id<GsonExclusionStrategy>)exclusionStrategy
                                                     withBoolean:(jboolean)serialization
                                                     withBoolean:(jboolean)deserialization;

- (GsonExcluder *)withModifiersWithIntArray:(IOSIntArray *)modifiers;

- (GsonExcluder *)withVersionWithDouble:(jdouble)ignoreVersionsAfter;

#pragma mark Protected

- (GsonExcluder *)java_clone;

@end

J2OBJC_STATIC_INIT(GsonExcluder)

inline GsonExcluder *GsonExcluder_get_DEFAULT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GsonExcluder *GsonExcluder_DEFAULT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonExcluder, DEFAULT, GsonExcluder *)

FOUNDATION_EXPORT void GsonExcluder_init(GsonExcluder *self);

FOUNDATION_EXPORT GsonExcluder *new_GsonExcluder_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonExcluder *create_GsonExcluder_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GsonExcluder)

@compatibility_alias ComGoogleGsonInternalExcluder GsonExcluder;

#endif

#pragma pop_macro("INCLUDE_ALL_Excluder")
