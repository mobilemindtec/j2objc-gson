//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonNull.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JsonElement.h"
#include "JsonNull.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"

__attribute__((unused)) static IOSObjectArray *GsonJsonNull__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(GsonJsonNull)

GsonJsonNull *GsonJsonNull_INSTANCE;

@implementation GsonJsonNull

+ (GsonJsonNull *)INSTANCE {
  return GsonJsonNull_INSTANCE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonJsonNull_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (GsonJsonNull *)deepCopy {
  return GsonJsonNull_INSTANCE;
}

- (NSUInteger)hash {
  return ((jint) [GsonJsonNull_class_() hash]);
}

- (jboolean)isEqual:(id)other {
  return self == other || [other isKindOfClass:[GsonJsonNull class]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, 0, -1 },
    { NULL, "LGsonJsonNull;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(deepCopy);
  methods[2].selector = @selector(hash);
  methods[3].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "LGsonJsonNull;", .constantValue.asLong = 0, 0x19, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&GsonJsonNull__Annotations$0, "hashCode", "equals", "LNSObject;", &GsonJsonNull_INSTANCE };
  static const J2ObjcClassInfo _GsonJsonNull = { "JsonNull", "com.google.gson", ptrTable, methods, fields, 7, 0x11, 4, 1, -1, -1, -1, -1, -1 };
  return &_GsonJsonNull;
}

+ (void)initialize {
  if (self == [GsonJsonNull class]) {
    GsonJsonNull_INSTANCE = new_GsonJsonNull_init();
    J2OBJC_SET_INITIALIZED(GsonJsonNull)
  }
}

@end

void GsonJsonNull_init(GsonJsonNull *self) {
  GsonJsonElement_init(self);
}

GsonJsonNull *new_GsonJsonNull_init() {
  J2OBJC_NEW_IMPL(GsonJsonNull, init)
}

GsonJsonNull *create_GsonJsonNull_init() {
  J2OBJC_CREATE_IMPL(GsonJsonNull, init)
}

IOSObjectArray *GsonJsonNull__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonJsonNull)
