//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DefaultDateTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DefaultDateTypeAdapter")
#ifdef RESTRICT_DefaultDateTypeAdapter
#define INCLUDE_ALL_DefaultDateTypeAdapter 0
#else
#define INCLUDE_ALL_DefaultDateTypeAdapter 1
#endif
#undef RESTRICT_DefaultDateTypeAdapter

#if !defined (GsonDefaultDateTypeAdapter_) && (INCLUDE_ALL_DefaultDateTypeAdapter || defined(INCLUDE_GsonDefaultDateTypeAdapter))
#define GsonDefaultDateTypeAdapter_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_GsonTypeAdapter 1
#include "TypeAdapter.h"

@class GsonJsonElement;
@class GsonJsonReader;
@class GsonJsonWriter;
@class IOSClass;
@class JavaIoReader;
@class JavaUtilDate;

@interface GsonDefaultDateTypeAdapter : GsonTypeAdapter

#pragma mark Public

- (instancetype)initWithIOSClass:(IOSClass *)dateType
                         withInt:(jint)dateStyle
                         withInt:(jint)timeStyle;

- (instancetype)initWithInt:(jint)dateStyle
                    withInt:(jint)timeStyle;

- (JavaUtilDate *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

- (JavaUtilDate *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilDate *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilDate *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (NSString *)description;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilDate *)value;

#pragma mark Package-Private

- (instancetype)initWithIOSClass:(IOSClass *)dateType;

- (instancetype)initWithIOSClass:(IOSClass *)dateType
                         withInt:(jint)style;

- (instancetype)initWithIOSClass:(IOSClass *)dateType
                    withNSString:(NSString *)datePattern;

// Disallowed inherited constructors, do not use.

- (instancetype)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonDefaultDateTypeAdapter)

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_(IOSClass *dateType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_(IOSClass *dateType);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_withNSString_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType, NSString *datePattern);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_withNSString_(IOSClass *dateType, NSString *datePattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_withNSString_(IOSClass *dateType, NSString *datePattern);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType, jint style);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_(IOSClass *dateType, jint style) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_(IOSClass *dateType, jint style);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithInt_withInt_(GsonDefaultDateTypeAdapter *self, jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithInt_withInt_(jint dateStyle, jint timeStyle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithInt_withInt_(jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_withInt_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType, jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_withInt_(IOSClass *dateType, jint dateStyle, jint timeStyle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_withInt_(IOSClass *dateType, jint dateStyle, jint timeStyle);

J2OBJC_TYPE_LITERAL_HEADER(GsonDefaultDateTypeAdapter)

@compatibility_alias ComGoogleGsonDefaultDateTypeAdapter GsonDefaultDateTypeAdapter;

#endif

#pragma pop_macro("INCLUDE_ALL_DefaultDateTypeAdapter")
