//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DefaultDateTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_DefaultDateTypeAdapter")
#ifdef RESTRICT_DefaultDateTypeAdapter
#define INCLUDE_ALL_DefaultDateTypeAdapter 0
#else
#define INCLUDE_ALL_DefaultDateTypeAdapter 1
#endif
#undef RESTRICT_DefaultDateTypeAdapter

#if !defined (GsonDefaultDateTypeAdapter_) && (INCLUDE_ALL_DefaultDateTypeAdapter || defined(INCLUDE_GsonDefaultDateTypeAdapter))
#define GsonDefaultDateTypeAdapter_

#define RESTRICT_JsonSerializer 1
#define INCLUDE_GsonJsonSerializer 1
#include "JsonSerializer.h"

#define RESTRICT_JsonDeserializer 1
#define INCLUDE_GsonJsonDeserializer 1
#include "JsonDeserializer.h"

@class GsonJsonElement;
@class JavaTextDateFormat;
@class JavaUtilDate;
@protocol GsonJsonDeserializationContext;
@protocol GsonJsonSerializationContext;
@protocol JavaLangReflectType;

@interface GsonDefaultDateTypeAdapter : NSObject < GsonJsonSerializer, GsonJsonDeserializer >

#pragma mark Public

- (instancetype)initWithInt:(jint)dateStyle
                    withInt:(jint)timeStyle;

- (JavaUtilDate *)deserializeWithGsonJsonElement:(GsonJsonElement *)json
                         withJavaLangReflectType:(id<JavaLangReflectType>)typeOfT
              withGsonJsonDeserializationContext:(id<GsonJsonDeserializationContext>)context;

- (GsonJsonElement *)serializeWithId:(JavaUtilDate *)src
             withJavaLangReflectType:(id<JavaLangReflectType>)typeOfSrc
    withGsonJsonSerializationContext:(id<GsonJsonSerializationContext>)context;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)init;

- (instancetype)initWithJavaTextDateFormat:(JavaTextDateFormat *)enUsFormat
                    withJavaTextDateFormat:(JavaTextDateFormat *)localFormat;

- (instancetype)initWithInt:(jint)style;

- (instancetype)initWithNSString:(NSString *)datePattern;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonDefaultDateTypeAdapter)

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_init(GsonDefaultDateTypeAdapter *self);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_init(void);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithNSString_(GsonDefaultDateTypeAdapter *self, NSString *datePattern);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithNSString_(NSString *datePattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithNSString_(NSString *datePattern);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithInt_(GsonDefaultDateTypeAdapter *self, jint style);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithInt_(jint style) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithInt_(jint style);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithInt_withInt_(GsonDefaultDateTypeAdapter *self, jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithInt_withInt_(jint dateStyle, jint timeStyle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithInt_withInt_(jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithJavaTextDateFormat_withJavaTextDateFormat_(GsonDefaultDateTypeAdapter *self, JavaTextDateFormat *enUsFormat, JavaTextDateFormat *localFormat);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithJavaTextDateFormat_withJavaTextDateFormat_(JavaTextDateFormat *enUsFormat, JavaTextDateFormat *localFormat) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithJavaTextDateFormat_withJavaTextDateFormat_(JavaTextDateFormat *enUsFormat, JavaTextDateFormat *localFormat);

J2OBJC_TYPE_LITERAL_HEADER(GsonDefaultDateTypeAdapter)

@compatibility_alias ComGoogleGsonDefaultDateTypeAdapter GsonDefaultDateTypeAdapter;

#endif

#pragma pop_macro("INCLUDE_ALL_DefaultDateTypeAdapter")
