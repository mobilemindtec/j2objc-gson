//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JsonObject")
#ifdef RESTRICT_JsonObject
#define INCLUDE_ALL_JsonObject 0
#else
#define INCLUDE_ALL_JsonObject 1
#endif
#undef RESTRICT_JsonObject

#if !defined (GsonJsonObject_) && (INCLUDE_ALL_JsonObject || defined(INCLUDE_GsonJsonObject))
#define GsonJsonObject_

#define RESTRICT_JsonElement 1
#define INCLUDE_GsonJsonElement 1
#include "JsonElement.h"

@class GsonJsonArray;
@class GsonJsonPrimitive;
@class JavaLangBoolean;
@class JavaLangCharacter;
@protocol JavaUtilSet;

@interface GsonJsonObject : GsonJsonElement

#pragma mark Public

- (instancetype)init;

- (void)addWithNSString:(NSString *)property
    withGsonJsonElement:(GsonJsonElement *)value;

- (void)addPropertyWithNSString:(NSString *)property
            withJavaLangBoolean:(JavaLangBoolean *)value;

- (void)addPropertyWithNSString:(NSString *)property
          withJavaLangCharacter:(JavaLangCharacter *)value;

- (void)addPropertyWithNSString:(NSString *)property
                   withNSNumber:(NSNumber *)value;

- (void)addPropertyWithNSString:(NSString *)property
                   withNSString:(NSString *)value;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (GsonJsonElement *)getWithNSString:(NSString *)memberName;

- (GsonJsonArray *)getAsJsonArrayWithNSString:(NSString *)memberName;

- (GsonJsonObject *)getAsJsonObjectWithNSString:(NSString *)memberName;

- (GsonJsonPrimitive *)getAsJsonPrimitiveWithNSString:(NSString *)memberName;

- (jboolean)hasWithNSString:(NSString *)memberName;

- (NSUInteger)hash;

- (GsonJsonElement *)removeWithNSString:(NSString *)property;

#pragma mark Package-Private

- (GsonJsonObject *)deepCopy;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonObject)

FOUNDATION_EXPORT void GsonJsonObject_init(GsonJsonObject *self);

FOUNDATION_EXPORT GsonJsonObject *new_GsonJsonObject_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonObject *create_GsonJsonObject_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonObject)

@compatibility_alias ComGoogleGsonJsonObject GsonJsonObject;

#endif

#pragma pop_macro("INCLUDE_ALL_JsonObject")
