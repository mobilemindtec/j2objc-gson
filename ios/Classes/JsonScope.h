//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonScope.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JsonScope")
#ifdef RESTRICT_JsonScope
#define INCLUDE_ALL_JsonScope 0
#else
#define INCLUDE_ALL_JsonScope 1
#endif
#undef RESTRICT_JsonScope

#if !defined (GsonJsonScope_) && (INCLUDE_ALL_JsonScope || defined(INCLUDE_GsonJsonScope))
#define GsonJsonScope_

@interface GsonJsonScope : NSObject

+ (jint)EMPTY_ARRAY;

+ (jint)NONEMPTY_ARRAY;

+ (jint)EMPTY_OBJECT;

+ (jint)DANGLING_NAME;

+ (jint)NONEMPTY_OBJECT;

+ (jint)EMPTY_DOCUMENT;

+ (jint)NONEMPTY_DOCUMENT;

+ (jint)CLOSED;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonScope)

inline jint GsonJsonScope_get_EMPTY_ARRAY(void);
#define GsonJsonScope_EMPTY_ARRAY 1
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, EMPTY_ARRAY, jint)

inline jint GsonJsonScope_get_NONEMPTY_ARRAY(void);
#define GsonJsonScope_NONEMPTY_ARRAY 2
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, NONEMPTY_ARRAY, jint)

inline jint GsonJsonScope_get_EMPTY_OBJECT(void);
#define GsonJsonScope_EMPTY_OBJECT 3
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, EMPTY_OBJECT, jint)

inline jint GsonJsonScope_get_DANGLING_NAME(void);
#define GsonJsonScope_DANGLING_NAME 4
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, DANGLING_NAME, jint)

inline jint GsonJsonScope_get_NONEMPTY_OBJECT(void);
#define GsonJsonScope_NONEMPTY_OBJECT 5
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, NONEMPTY_OBJECT, jint)

inline jint GsonJsonScope_get_EMPTY_DOCUMENT(void);
#define GsonJsonScope_EMPTY_DOCUMENT 6
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, EMPTY_DOCUMENT, jint)

inline jint GsonJsonScope_get_NONEMPTY_DOCUMENT(void);
#define GsonJsonScope_NONEMPTY_DOCUMENT 7
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, NONEMPTY_DOCUMENT, jint)

inline jint GsonJsonScope_get_CLOSED(void);
#define GsonJsonScope_CLOSED 8
J2OBJC_STATIC_FIELD_CONSTANT(GsonJsonScope, CLOSED, jint)

FOUNDATION_EXPORT void GsonJsonScope_init(GsonJsonScope *self);

FOUNDATION_EXPORT GsonJsonScope *new_GsonJsonScope_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonScope *create_GsonJsonScope_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonScope)

@compatibility_alias ComGoogleGsonStreamJsonScope GsonJsonScope;

#endif

#pragma pop_macro("INCLUDE_ALL_JsonScope")
