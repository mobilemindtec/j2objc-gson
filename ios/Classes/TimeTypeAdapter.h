//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/TimeTypeAdapter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_TimeTypeAdapter")
#ifdef RESTRICT_TimeTypeAdapter
#define INCLUDE_ALL_TimeTypeAdapter 0
#else
#define INCLUDE_ALL_TimeTypeAdapter 1
#endif
#undef RESTRICT_TimeTypeAdapter

#if !defined (GsonTimeTypeAdapter_) && (INCLUDE_ALL_TimeTypeAdapter || defined(INCLUDE_GsonTimeTypeAdapter))
#define GsonTimeTypeAdapter_

#define RESTRICT_TypeAdapter 1
#define INCLUDE_GsonTypeAdapter 1
#include "TypeAdapter.h"

@class GsonJsonElement;
@class GsonJsonReader;
@class GsonJsonWriter;
@class JavaIoReader;
@class JavaSqlTime;
@protocol GsonTypeAdapterFactory;

@interface GsonTimeTypeAdapter : GsonTypeAdapter

+ (id<GsonTypeAdapterFactory>)FACTORY;

#pragma mark Public

- (instancetype)init;

- (JavaSqlTime *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

- (JavaSqlTime *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaSqlTime *)fromJsonWithNSString:(NSString *)arg0;

- (JavaSqlTime *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaSqlTime *)value;

@end

J2OBJC_STATIC_INIT(GsonTimeTypeAdapter)

inline id<GsonTypeAdapterFactory> GsonTimeTypeAdapter_get_FACTORY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GsonTypeAdapterFactory> GsonTimeTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonTimeTypeAdapter, FACTORY, id<GsonTypeAdapterFactory>)

FOUNDATION_EXPORT void GsonTimeTypeAdapter_init(GsonTimeTypeAdapter *self);

FOUNDATION_EXPORT GsonTimeTypeAdapter *new_GsonTimeTypeAdapter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonTimeTypeAdapter *create_GsonTimeTypeAdapter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GsonTimeTypeAdapter)

@compatibility_alias ComGoogleGsonInternalBindTimeTypeAdapter GsonTimeTypeAdapter;

#endif

#pragma pop_macro("INCLUDE_ALL_TimeTypeAdapter")
