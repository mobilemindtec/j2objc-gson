//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonIOException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_JsonIOException")
#ifdef RESTRICT_JsonIOException
#define INCLUDE_ALL_JsonIOException 0
#else
#define INCLUDE_ALL_JsonIOException 1
#endif
#undef RESTRICT_JsonIOException

#if !defined (GsonJsonIOException_) && (INCLUDE_ALL_JsonIOException || defined(INCLUDE_GsonJsonIOException))
#define GsonJsonIOException_

#define RESTRICT_JsonParseException 1
#define INCLUDE_GsonJsonParseException 1
#include "JsonParseException.h"

@class JavaLangThrowable;

@interface GsonJsonIOException : GsonJsonParseException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)msg;

- (instancetype)initWithNSString:(NSString *)msg
           withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonIOException)

FOUNDATION_EXPORT void GsonJsonIOException_initWithNSString_(GsonJsonIOException *self, NSString *msg);

FOUNDATION_EXPORT GsonJsonIOException *new_GsonJsonIOException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonIOException *create_GsonJsonIOException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void GsonJsonIOException_initWithNSString_withJavaLangThrowable_(GsonJsonIOException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT GsonJsonIOException *new_GsonJsonIOException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonIOException *create_GsonJsonIOException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT void GsonJsonIOException_initWithJavaLangThrowable_(GsonJsonIOException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT GsonJsonIOException *new_GsonJsonIOException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonIOException *create_GsonJsonIOException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonIOException)

@compatibility_alias ComGoogleGsonJsonIOException GsonJsonIOException;

#endif

#pragma pop_macro("INCLUDE_ALL_JsonIOException")
