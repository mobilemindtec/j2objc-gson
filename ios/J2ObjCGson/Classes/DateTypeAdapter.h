//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DateTypeAdapter.java
//

#ifndef DateTypeAdapter_H
#define DateTypeAdapter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TypeAdapter.h"

@class GsonJsonElement;
@class GsonJsonReader;
@class GsonJsonWriter;
@class JavaIoReader;
@class JavaUtilDate;
@protocol GsonTypeAdapterFactory;

@interface GsonDateTypeAdapter : GsonTypeAdapter
@property (readonly, class) id<GsonTypeAdapterFactory> FACTORY NS_SWIFT_NAME(FACTORY);

+ (id<GsonTypeAdapterFactory>)FACTORY;

#pragma mark Public

- (instancetype __nonnull)init;

- (JavaUtilDate *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

- (JavaUtilDate *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilDate *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilDate *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilDate *)value;

@end

J2OBJC_STATIC_INIT(GsonDateTypeAdapter)

inline id<GsonTypeAdapterFactory> GsonDateTypeAdapter_get_FACTORY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GsonTypeAdapterFactory> GsonDateTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonDateTypeAdapter, FACTORY, id<GsonTypeAdapterFactory>)

FOUNDATION_EXPORT void GsonDateTypeAdapter_init(GsonDateTypeAdapter *self);

FOUNDATION_EXPORT GsonDateTypeAdapter *new_GsonDateTypeAdapter_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDateTypeAdapter *create_GsonDateTypeAdapter_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GsonDateTypeAdapter)

@compatibility_alias ComGoogleGsonInternalBindDateTypeAdapter GsonDateTypeAdapter;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DateTypeAdapter_H
