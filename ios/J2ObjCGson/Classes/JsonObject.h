//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonObject.java
//

#ifndef JsonObject_H
#define JsonObject_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "JsonElement.h"

@class GsonJsonArray;
@class GsonJsonPrimitive;
@class JavaLangBoolean;
@class JavaLangCharacter;
@protocol JavaUtilSet;

@interface GsonJsonObject : GsonJsonElement

#pragma mark Public

- (instancetype __nonnull)init;

- (void)addWithNSString:(NSString *)property
    withGsonJsonElement:(GsonJsonElement *)value;

- (void)addPropertyWithNSString:(NSString *)property
            withJavaLangBoolean:(JavaLangBoolean *)value;

- (void)addPropertyWithNSString:(NSString *)property
          withJavaLangCharacter:(JavaLangCharacter *)value;

- (void)addPropertyWithNSString:(NSString *)property
                   withNSNumber:(NSNumber *)value;

- (void)addPropertyWithNSString:(NSString *)property
                   withNSString:(NSString *)value;

- (GsonJsonObject *)deepCopy;

- (id<JavaUtilSet>)entrySet;

- (jboolean)isEqual:(id)o;

- (GsonJsonElement *)getWithNSString:(NSString *)memberName;

- (GsonJsonArray *)getAsJsonArrayWithNSString:(NSString *)memberName;

- (GsonJsonObject *)getAsJsonObjectWithNSString:(NSString *)memberName;

- (GsonJsonPrimitive *)getAsJsonPrimitiveWithNSString:(NSString *)memberName;

- (jboolean)hasWithNSString:(NSString *)memberName;

- (NSUInteger)hash;

- (id<JavaUtilSet>)keySet;

- (GsonJsonElement *)removeWithNSString:(NSString *)property;

- (jint)size;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonObject)

FOUNDATION_EXPORT void GsonJsonObject_init(GsonJsonObject *self);

FOUNDATION_EXPORT GsonJsonObject *new_GsonJsonObject_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonObject *create_GsonJsonObject_init(void);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonObject)

@compatibility_alias ComGoogleGsonJsonObject GsonJsonObject;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JsonObject_H
