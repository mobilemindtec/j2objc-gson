//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonReaderInternalAccess.java
//

#ifndef JsonReaderInternalAccess_H
#define JsonReaderInternalAccess_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"

@class GsonJsonReader;

@interface GsonJsonReaderInternalAccess : NSObject
@property (class) GsonJsonReaderInternalAccess *INSTANCE NS_SWIFT_NAME(INSTANCE);

+ (GsonJsonReaderInternalAccess *)INSTANCE;

+ (void)setINSTANCE:(GsonJsonReaderInternalAccess *)value;

#pragma mark Public

- (instancetype __nonnull)init;

- (void)promoteNameToValueWithGsonJsonReader:(GsonJsonReader *)reader;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonReaderInternalAccess)

inline GsonJsonReaderInternalAccess *GsonJsonReaderInternalAccess_get_INSTANCE(void);
inline GsonJsonReaderInternalAccess *GsonJsonReaderInternalAccess_set_INSTANCE(GsonJsonReaderInternalAccess *value);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT GsonJsonReaderInternalAccess *GsonJsonReaderInternalAccess_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ(GsonJsonReaderInternalAccess, INSTANCE, GsonJsonReaderInternalAccess *)

FOUNDATION_EXPORT void GsonJsonReaderInternalAccess_init(GsonJsonReaderInternalAccess *self);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonReaderInternalAccess)

@compatibility_alias ComGoogleGsonInternalJsonReaderInternalAccess GsonJsonReaderInternalAccess;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JsonReaderInternalAccess_H
