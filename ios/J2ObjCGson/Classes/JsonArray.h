//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonArray.java
//

#ifndef JsonArray_H
#define JsonArray_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "JsonElement.h"
#include "java/lang/Iterable.h"

@class JavaLangBoolean;
@class JavaLangCharacter;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@protocol JavaUtilFunctionConsumer;
@protocol JavaUtilIterator;
@protocol JavaUtilSpliterator;

@interface GsonJsonArray : GsonJsonElement < JavaLangIterable >

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithInt:(jint)capacity;

- (void)addWithJavaLangBoolean:(JavaLangBoolean *)bool_;

- (void)addWithJavaLangCharacter:(JavaLangCharacter *)character;

- (void)addWithGsonJsonElement:(GsonJsonElement *)element;

- (void)addWithNSNumber:(NSNumber *)number;

- (void)addWithNSString:(NSString *)string;

- (void)addAllWithGsonJsonArray:(GsonJsonArray *)array;

- (jboolean)containsWithGsonJsonElement:(GsonJsonElement *)element;

- (GsonJsonArray *)deepCopy;

- (jboolean)isEqual:(id)o;

- (GsonJsonElement *)getWithInt:(jint)i;

- (JavaMathBigDecimal *)getAsBigDecimal;

- (JavaMathBigInteger *)getAsBigInteger;

- (jboolean)getAsBoolean;

- (jbyte)getAsByte;

- (jchar)getAsCharacter;

- (jdouble)getAsDouble;

- (jfloat)getAsFloat;

- (jint)getAsInt;

- (jlong)getAsLong;

- (NSNumber *)getAsNumber;

- (jshort)getAsShort;

- (NSString *)getAsString;

- (NSUInteger)hash;

- (id<JavaUtilIterator>)iterator;

- (GsonJsonElement *)removeWithInt:(jint)index;

- (jboolean)removeWithGsonJsonElement:(GsonJsonElement *)element;

- (GsonJsonElement *)setWithInt:(jint)index
            withGsonJsonElement:(GsonJsonElement *)element;

- (jint)size;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonArray)

FOUNDATION_EXPORT void GsonJsonArray_init(GsonJsonArray *self);

FOUNDATION_EXPORT GsonJsonArray *new_GsonJsonArray_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonArray *create_GsonJsonArray_init(void);

FOUNDATION_EXPORT void GsonJsonArray_initWithInt_(GsonJsonArray *self, jint capacity);

FOUNDATION_EXPORT GsonJsonArray *new_GsonJsonArray_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonArray *create_GsonJsonArray_initWithInt_(jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonArray)

@compatibility_alias ComGoogleGsonJsonArray GsonJsonArray;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JsonArray_H
