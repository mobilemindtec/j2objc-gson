//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/Expose.java
//

#include "Expose.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/annotation/Documented.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

__attribute__((unused)) static IOSObjectArray *GsonExpose__Annotations$0(void);

@implementation GsonExpose

@synthesize serialize = serialize_;
@synthesize deserialize = deserialize_;

+ (jboolean)serializeDefault {
  return true;
}

+ (jboolean)deserializeDefault {
  return true;
}

- (IOSClass *)annotationType {
  return GsonExpose_class_();
}

- (NSString *)description {
  return [NSString stringWithFormat:@"@j2objc.gson.annotations.Expose(serialize=%d, deserialize=%d)", serialize_, deserialize_];
}

- (jboolean)isEqual:(id)obj {
  return JreAnnotationEquals(self, obj);
}

- (NSUInteger)hash {
  return JreAnnotationHashCode(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(serialize);
  methods[1].selector = @selector(deserialize);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialize_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
    { "deserialize_", "Z", .constantValue.asLong = 0, 0x1000, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { (void *)&GsonExpose__Annotations$0 };
  static const J2ObjcClassInfo _GsonExpose = { "Expose", "j2objc.gson.annotations", ptrTable, methods, fields, 7, 0x2609, 2, 2, -1, -1, -1, -1, 0 };
  return &_GsonExpose;
}

@end

id<GsonExpose> create_GsonExpose(jboolean deserialize, jboolean serialize) {
  GsonExpose *self = AUTORELEASE([[GsonExpose alloc] init]);
  self->deserialize_ = deserialize;
  self->serialize_ = serialize;
  return self;
}

IOSObjectArray *GsonExpose__Annotations$0() {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangAnnotationDocumented(), create_JavaLangAnnotationRetention(JreLoadEnum(JavaLangAnnotationRetentionPolicy, RUNTIME)), create_JavaLangAnnotationTarget([IOSObjectArray newArrayWithObjects:(id[]){ JreLoadEnum(JavaLangAnnotationElementType, FIELD) } count:1 type:JavaLangAnnotationElementType_class_()]) } count:3 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(GsonExpose)

J2OBJC_NAME_MAPPING(GsonExpose, "j2objc.gson.annotations", "Gson")
