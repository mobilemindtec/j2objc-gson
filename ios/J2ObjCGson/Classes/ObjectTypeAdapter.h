//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ObjectTypeAdapter.java
//

#ifndef ObjectTypeAdapter_H
#define ObjectTypeAdapter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TypeAdapter.h"

@class GsonGson;
@class GsonJsonReader;
@class GsonJsonWriter;
@protocol GsonTypeAdapterFactory;

@interface GsonObjectTypeAdapter : GsonTypeAdapter
@property (readonly, class) id<GsonTypeAdapterFactory> FACTORY NS_SWIFT_NAME(FACTORY);

+ (id<GsonTypeAdapterFactory>)FACTORY;

#pragma mark Public

- (id)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(id)value;

#pragma mark Package-Private

- (instancetype __nonnull)initWithGsonGson:(GsonGson *)gson;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(GsonObjectTypeAdapter)

inline id<GsonTypeAdapterFactory> GsonObjectTypeAdapter_get_FACTORY(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<GsonTypeAdapterFactory> GsonObjectTypeAdapter_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(GsonObjectTypeAdapter, FACTORY, id<GsonTypeAdapterFactory>)

FOUNDATION_EXPORT void GsonObjectTypeAdapter_initWithGsonGson_(GsonObjectTypeAdapter *self, GsonGson *gson);

FOUNDATION_EXPORT GsonObjectTypeAdapter *new_GsonObjectTypeAdapter_initWithGsonGson_(GsonGson *gson) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonObjectTypeAdapter *create_GsonObjectTypeAdapter_initWithGsonGson_(GsonGson *gson);

J2OBJC_TYPE_LITERAL_HEADER(GsonObjectTypeAdapter)

@compatibility_alias ComGoogleGsonInternalBindObjectTypeAdapter GsonObjectTypeAdapter;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // ObjectTypeAdapter_H
