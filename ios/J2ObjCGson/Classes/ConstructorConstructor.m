//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/ConstructorConstructor.java
//

#include "ConstructorConstructor.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "InstanceCreator.h"
#include "J2ObjC_source.h"
#include "JsonIOException.h"
#include "LinkedTreeMap.h"
#include "ObjectConstructor.h"
#include "ReflectionAccessor.h"
#include "TypeToken.h"
#include "UnsafeAllocator.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Throwable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayDeque.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/EnumSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/Map.h"
#include "java/util/Queue.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/SortedSet.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/concurrent/ConcurrentHashMap.h"
#include "java/util/concurrent/ConcurrentMap.h"
#include "java/util/concurrent/ConcurrentNavigableMap.h"
#include "java/util/concurrent/ConcurrentSkipListMap.h"

@interface GsonConstructorConstructor () {
 @public
  id<JavaUtilMap> instanceCreators_;
  ComGoogleGsonInternalReflectReflectionAccessor *accessor_;
}

- (id<GsonObjectConstructor>)newDefaultConstructorWithIOSClass:(IOSClass *)rawType OBJC_METHOD_FAMILY_NONE;

- (id<GsonObjectConstructor>)newDefaultImplementationConstructorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                                           withIOSClass:(IOSClass *)rawType OBJC_METHOD_FAMILY_NONE;

- (id<GsonObjectConstructor>)newUnsafeAllocatorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                          withIOSClass:(IOSClass *)rawType OBJC_METHOD_FAMILY_NONE;

@end

J2OBJC_FIELD_SETTER(GsonConstructorConstructor, instanceCreators_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(GsonConstructorConstructor, accessor_, ComGoogleGsonInternalReflectReflectionAccessor *)

__attribute__((unused)) static id<GsonObjectConstructor> GsonConstructorConstructor_newDefaultConstructorWithIOSClass_(GsonConstructorConstructor *self, IOSClass *rawType);

__attribute__((unused)) static id<GsonObjectConstructor> GsonConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(GsonConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType);

__attribute__((unused)) static id<GsonObjectConstructor> GsonConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(GsonConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType);

@interface GsonConstructorConstructor_1 : NSObject < GsonObjectConstructor > {
 @public
  id<GsonInstanceCreator> val$typeCreator_;
  id<JavaLangReflectType> val$type_;
}

- (instancetype)initWithGsonInstanceCreator:(id<GsonInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_1)

__attribute__((unused)) static void GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(GsonConstructorConstructor_1 *self, id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

__attribute__((unused)) static GsonConstructorConstructor_1 *new_GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_1 *create_GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

@interface GsonConstructorConstructor_2 : NSObject < GsonObjectConstructor > {
 @public
  id<GsonInstanceCreator> val$rawTypeCreator_;
  id<JavaLangReflectType> val$type_;
}

- (instancetype)initWithGsonInstanceCreator:(id<GsonInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_2)

__attribute__((unused)) static void GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(GsonConstructorConstructor_2 *self, id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

__attribute__((unused)) static GsonConstructorConstructor_2 *new_GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_2 *create_GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1);

@interface GsonConstructorConstructor_3 : NSObject < GsonObjectConstructor > {
 @public
  JavaLangReflectConstructor *val$constructor_;
}

- (instancetype)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)capture$0;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_3)

__attribute__((unused)) static void GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(GsonConstructorConstructor_3 *self, JavaLangReflectConstructor *capture$0);

__attribute__((unused)) static GsonConstructorConstructor_3 *new_GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_3 *create_GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0);

@interface GsonConstructorConstructor_4 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_4)

__attribute__((unused)) static void GsonConstructorConstructor_4_init(GsonConstructorConstructor_4 *self);

__attribute__((unused)) static GsonConstructorConstructor_4 *new_GsonConstructorConstructor_4_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_4 *create_GsonConstructorConstructor_4_init(void);

@interface GsonConstructorConstructor_5 : NSObject < GsonObjectConstructor > {
 @public
  id<JavaLangReflectType> val$type_;
}

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)capture$0;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_5)

__attribute__((unused)) static void GsonConstructorConstructor_5_initWithJavaLangReflectType_(GsonConstructorConstructor_5 *self, id<JavaLangReflectType> capture$0);

__attribute__((unused)) static GsonConstructorConstructor_5 *new_GsonConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_5 *create_GsonConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0);

@interface GsonConstructorConstructor_6 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_6)

__attribute__((unused)) static void GsonConstructorConstructor_6_init(GsonConstructorConstructor_6 *self);

__attribute__((unused)) static GsonConstructorConstructor_6 *new_GsonConstructorConstructor_6_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_6 *create_GsonConstructorConstructor_6_init(void);

@interface GsonConstructorConstructor_7 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_7)

__attribute__((unused)) static void GsonConstructorConstructor_7_init(GsonConstructorConstructor_7 *self);

__attribute__((unused)) static GsonConstructorConstructor_7 *new_GsonConstructorConstructor_7_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_7 *create_GsonConstructorConstructor_7_init(void);

@interface GsonConstructorConstructor_8 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_8)

__attribute__((unused)) static void GsonConstructorConstructor_8_init(GsonConstructorConstructor_8 *self);

__attribute__((unused)) static GsonConstructorConstructor_8 *new_GsonConstructorConstructor_8_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_8 *create_GsonConstructorConstructor_8_init(void);

@interface GsonConstructorConstructor_9 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_9)

__attribute__((unused)) static void GsonConstructorConstructor_9_init(GsonConstructorConstructor_9 *self);

__attribute__((unused)) static GsonConstructorConstructor_9 *new_GsonConstructorConstructor_9_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_9 *create_GsonConstructorConstructor_9_init(void);

@interface GsonConstructorConstructor_10 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_10)

__attribute__((unused)) static void GsonConstructorConstructor_10_init(GsonConstructorConstructor_10 *self);

__attribute__((unused)) static GsonConstructorConstructor_10 *new_GsonConstructorConstructor_10_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_10 *create_GsonConstructorConstructor_10_init(void);

@interface GsonConstructorConstructor_11 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_11)

__attribute__((unused)) static void GsonConstructorConstructor_11_init(GsonConstructorConstructor_11 *self);

__attribute__((unused)) static GsonConstructorConstructor_11 *new_GsonConstructorConstructor_11_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_11 *create_GsonConstructorConstructor_11_init(void);

@interface GsonConstructorConstructor_12 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_12)

__attribute__((unused)) static void GsonConstructorConstructor_12_init(GsonConstructorConstructor_12 *self);

__attribute__((unused)) static GsonConstructorConstructor_12 *new_GsonConstructorConstructor_12_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_12 *create_GsonConstructorConstructor_12_init(void);

@interface GsonConstructorConstructor_13 : NSObject < GsonObjectConstructor >

- (instancetype)init;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_13)

__attribute__((unused)) static void GsonConstructorConstructor_13_init(GsonConstructorConstructor_13 *self);

__attribute__((unused)) static GsonConstructorConstructor_13 *new_GsonConstructorConstructor_13_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_13 *create_GsonConstructorConstructor_13_init(void);

@interface GsonConstructorConstructor_14 : NSObject < GsonObjectConstructor > {
 @public
  IOSClass *val$rawType_;
  id<JavaLangReflectType> val$type_;
  GsonUnsafeAllocator *unsafeAllocator_;
}

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
         withJavaLangReflectType:(id<JavaLangReflectType>)capture$1;

- (id)construct;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonConstructorConstructor_14)

J2OBJC_FIELD_SETTER(GsonConstructorConstructor_14, unsafeAllocator_, GsonUnsafeAllocator *)

__attribute__((unused)) static void GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(GsonConstructorConstructor_14 *self, IOSClass *capture$0, id<JavaLangReflectType> capture$1);

__attribute__((unused)) static GsonConstructorConstructor_14 *new_GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static GsonConstructorConstructor_14 *create_GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1);

@implementation GsonConstructorConstructor

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)instanceCreators {
  GsonConstructorConstructor_initWithJavaUtilMap_(self, instanceCreators);
  return self;
}

- (id<GsonObjectConstructor>)getWithGsonTypeToken:(GsonTypeToken *)typeToken {
  id<JavaLangReflectType> type = [((GsonTypeToken *) nil_chk(typeToken)) getType];
  IOSClass *rawType = [typeToken getRawType];
  id<GsonInstanceCreator> typeCreator = [((id<JavaUtilMap>) nil_chk(instanceCreators_)) getWithId:type];
  if (typeCreator != nil) {
    return new_GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(typeCreator, type);
  }
  id<GsonInstanceCreator> rawTypeCreator = [instanceCreators_ getWithId:rawType];
  if (rawTypeCreator != nil) {
    return new_GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(rawTypeCreator, type);
  }
  id<GsonObjectConstructor> defaultConstructor = GsonConstructorConstructor_newDefaultConstructorWithIOSClass_(self, rawType);
  if (defaultConstructor != nil) {
    return defaultConstructor;
  }
  id<GsonObjectConstructor> defaultImplementation = GsonConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
  if (defaultImplementation != nil) {
    return defaultImplementation;
  }
  return GsonConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
}

- (id<GsonObjectConstructor>)newDefaultConstructorWithIOSClass:(IOSClass *)rawType {
  return GsonConstructorConstructor_newDefaultConstructorWithIOSClass_(self, rawType);
}

- (id<GsonObjectConstructor>)newDefaultImplementationConstructorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                                           withIOSClass:(IOSClass *)rawType {
  return GsonConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
}

- (id<GsonObjectConstructor>)newUnsafeAllocatorWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                          withIOSClass:(IOSClass *)rawType {
  return GsonConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(self, type, rawType);
}

- (NSString *)description {
  return [((id<JavaUtilMap>) nil_chk(instanceCreators_)) description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LGsonObjectConstructor;", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LGsonObjectConstructor;", 0x2, 5, 6, -1, 7, -1, -1 },
    { NULL, "LGsonObjectConstructor;", 0x2, 8, 9, -1, 10, -1, -1 },
    { NULL, "LGsonObjectConstructor;", 0x2, 11, 9, -1, 10, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(getWithGsonTypeToken:);
  methods[2].selector = @selector(newDefaultConstructorWithIOSClass:);
  methods[3].selector = @selector(newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:);
  methods[4].selector = @selector(newUnsafeAllocatorWithJavaLangReflectType:withIOSClass:);
  methods[5].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instanceCreators_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 13, -1 },
    { "accessor_", "LComGoogleGsonInternalReflectReflectionAccessor;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/reflect/Type;Lcom/google/gson/InstanceCreator<*>;>;)V", "get", "LGsonTypeToken;", "<T:Ljava/lang/Object;>(Lcom/google/gson/reflect/TypeToken<TT;>;)Lcom/google/gson/internal/ObjectConstructor<TT;>;", "newDefaultConstructor", "LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<-TT;>;)Lcom/google/gson/internal/ObjectConstructor<TT;>;", "newDefaultImplementationConstructor", "LJavaLangReflectType;LIOSClass;", "<T:Ljava/lang/Object;>(Ljava/lang/reflect/Type;Ljava/lang/Class<-TT;>;)Lcom/google/gson/internal/ObjectConstructor<TT;>;", "newUnsafeAllocator", "toString", "Ljava/util/Map<Ljava/lang/reflect/Type;Lcom/google/gson/InstanceCreator<*>;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor = { "ConstructorConstructor", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, -1, -1, -1, -1 };
  return &_GsonConstructorConstructor;
}

@end

void GsonConstructorConstructor_initWithJavaUtilMap_(GsonConstructorConstructor *self, id<JavaUtilMap> instanceCreators) {
  NSObject_init(self);
  self->accessor_ = ComGoogleGsonInternalReflectReflectionAccessor_getInstance();
  self->instanceCreators_ = instanceCreators;
}

GsonConstructorConstructor *new_GsonConstructorConstructor_initWithJavaUtilMap_(id<JavaUtilMap> instanceCreators) {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor, initWithJavaUtilMap_, instanceCreators)
}

GsonConstructorConstructor *create_GsonConstructorConstructor_initWithJavaUtilMap_(id<JavaUtilMap> instanceCreators) {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor, initWithJavaUtilMap_, instanceCreators)
}

id<GsonObjectConstructor> GsonConstructorConstructor_newDefaultConstructorWithIOSClass_(GsonConstructorConstructor *self, IOSClass *rawType) {
  @try {
    JavaLangReflectConstructor *constructor = [((IOSClass *) nil_chk(rawType)) getDeclaredConstructor:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
    if (![((JavaLangReflectConstructor *) nil_chk(constructor)) isAccessible]) {
      [((ComGoogleGsonInternalReflectReflectionAccessor *) nil_chk(self->accessor_)) makeAccessibleWithJavaLangReflectAccessibleObject:constructor];
    }
    return new_GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(constructor);
  }
  @catch (JavaLangNoSuchMethodException *e) {
    return nil;
  }
}

id<GsonObjectConstructor> GsonConstructorConstructor_newDefaultImplementationConstructorWithJavaLangReflectType_withIOSClass_(GsonConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType) {
  if ([JavaUtilCollection_class_() isAssignableFrom:rawType]) {
    if ([JavaUtilSortedSet_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_4_init();
    }
    else if ([JavaUtilEnumSet_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_5_initWithJavaLangReflectType_(type);
    }
    else if ([JavaUtilSet_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_6_init();
    }
    else if ([JavaUtilQueue_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_7_init();
    }
    else {
      return new_GsonConstructorConstructor_8_init();
    }
  }
  if ([JavaUtilMap_class_() isAssignableFrom:rawType]) {
    if ([JavaUtilConcurrentConcurrentNavigableMap_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_9_init();
    }
    else if ([JavaUtilConcurrentConcurrentMap_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_10_init();
    }
    else if ([JavaUtilSortedMap_class_() isAssignableFrom:rawType]) {
      return new_GsonConstructorConstructor_11_init();
    }
    else if ([JavaLangReflectParameterizedType_class_() isInstance:type] && !([NSString_class_() isAssignableFrom:[((GsonTypeToken *) nil_chk(GsonTypeToken_getWithJavaLangReflectType_(IOSObjectArray_Get(nil_chk([((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_())))) getActualTypeArguments]), 0)))) getRawType]])) {
      return new_GsonConstructorConstructor_12_init();
    }
    else {
      return new_GsonConstructorConstructor_13_init();
    }
  }
  return nil;
}

id<GsonObjectConstructor> GsonConstructorConstructor_newUnsafeAllocatorWithJavaLangReflectType_withIOSClass_(GsonConstructorConstructor *self, id<JavaLangReflectType> type, IOSClass *rawType) {
  return new_GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(rawType, type);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonConstructorConstructor)

@implementation GsonConstructorConstructor_1

- (instancetype)initWithGsonInstanceCreator:(id<GsonInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1 {
  GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(self, capture$0, capture$1);
  return self;
}

- (id)construct {
  return [((id<GsonInstanceCreator>) nil_chk(val$typeCreator_)) createInstanceWithJavaLangReflectType:val$type_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGsonInstanceCreator:withJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$typeCreator_", "LGsonInstanceCreator;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Lcom/google/gson/InstanceCreator<TT;>;", "LGsonConstructorConstructor;", "getWithGsonTypeToken:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_1 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
  return &_GsonConstructorConstructor_1;
}

@end

void GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(GsonConstructorConstructor_1 *self, id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  self->val$typeCreator_ = capture$0;
  self->val$type_ = capture$1;
  NSObject_init(self);
}

GsonConstructorConstructor_1 *new_GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_1, initWithGsonInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

GsonConstructorConstructor_1 *create_GsonConstructorConstructor_1_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_1, initWithGsonInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

@implementation GsonConstructorConstructor_2

- (instancetype)initWithGsonInstanceCreator:(id<GsonInstanceCreator>)capture$0
                    withJavaLangReflectType:(id<JavaLangReflectType>)capture$1 {
  GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(self, capture$0, capture$1);
  return self;
}

- (id)construct {
  return [((id<GsonInstanceCreator>) nil_chk(val$rawTypeCreator_)) createInstanceWithJavaLangReflectType:val$type_];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithGsonInstanceCreator:withJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$rawTypeCreator_", "LGsonInstanceCreator;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Lcom/google/gson/InstanceCreator<TT;>;", "LGsonConstructorConstructor;", "getWithGsonTypeToken:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_2 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 2, 2, -1, 3, 4, -1 };
  return &_GsonConstructorConstructor_2;
}

@end

void GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(GsonConstructorConstructor_2 *self, id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  self->val$rawTypeCreator_ = capture$0;
  self->val$type_ = capture$1;
  NSObject_init(self);
}

GsonConstructorConstructor_2 *new_GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_2, initWithGsonInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

GsonConstructorConstructor_2 *create_GsonConstructorConstructor_2_initWithGsonInstanceCreator_withJavaLangReflectType_(id<GsonInstanceCreator> capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_2, initWithGsonInstanceCreator_withJavaLangReflectType_, capture$0, capture$1)
}

@implementation GsonConstructorConstructor_3

- (instancetype)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)capture$0 {
  GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(self, capture$0);
  return self;
}

- (id)construct {
  @try {
    IOSObjectArray *args = nil;
    return [((JavaLangReflectConstructor *) nil_chk(val$constructor_)) newInstanceWithNSObjectArray:args];
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@$", @"Failed to invoke ", val$constructor_, @" with no args"), e);
  }
  @catch (JavaLangReflectInvocationTargetException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_(JreStrcat("$@$", @"Failed to invoke ", val$constructor_, @" with no args"), [e getTargetException]);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectConstructor:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$constructor_", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Ljava/lang/reflect/Constructor<-TT;>;", "LGsonConstructorConstructor;", "newDefaultConstructorWithIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_3 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 2, -1, 3, 4, -1 };
  return &_GsonConstructorConstructor_3;
}

@end

void GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(GsonConstructorConstructor_3 *self, JavaLangReflectConstructor *capture$0) {
  self->val$constructor_ = capture$0;
  NSObject_init(self);
}

GsonConstructorConstructor_3 *new_GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0) {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_3, initWithJavaLangReflectConstructor_, capture$0)
}

GsonConstructorConstructor_3 *create_GsonConstructorConstructor_3_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *capture$0) {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_3, initWithJavaLangReflectConstructor_, capture$0)
}

@implementation GsonConstructorConstructor_4

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_4_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilTreeSet_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_4 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_4;
}

@end

void GsonConstructorConstructor_4_init(GsonConstructorConstructor_4 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_4 *new_GsonConstructorConstructor_4_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_4, init)
}

GsonConstructorConstructor_4 *create_GsonConstructorConstructor_4_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_4, init)
}

@implementation GsonConstructorConstructor_5

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)capture$0 {
  GsonConstructorConstructor_5_initWithJavaLangReflectType_(self, capture$0);
  return self;
}

- (id)construct {
  if ([JavaLangReflectParameterizedType_class_() isInstance:val$type_]) {
    id<JavaLangReflectType> elementType = IOSObjectArray_Get(nil_chk([((id<JavaLangReflectParameterizedType>) nil_chk(((id<JavaLangReflectParameterizedType>) cast_check(val$type_, JavaLangReflectParameterizedType_class_())))) getActualTypeArguments]), 0);
    if ([elementType isKindOfClass:[IOSClass class]]) {
      return JavaUtilEnumSet_noneOfWithIOSClass_((IOSClass *) cast_chk(elementType, [IOSClass class]));
    }
    else {
      @throw new_GsonJsonIOException_initWithNSString_(JreStrcat("$$", @"Invalid EnumSet type: ", [((id<JavaLangReflectType>) nil_chk(val$type_)) description]));
    }
  }
  else {
    @throw new_GsonJsonIOException_initWithNSString_(JreStrcat("$$", @"Invalid EnumSet type: ", [((id<JavaLangReflectType>) nil_chk(val$type_)) description]));
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_5 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 1, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_5;
}

@end

void GsonConstructorConstructor_5_initWithJavaLangReflectType_(GsonConstructorConstructor_5 *self, id<JavaLangReflectType> capture$0) {
  self->val$type_ = capture$0;
  NSObject_init(self);
}

GsonConstructorConstructor_5 *new_GsonConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0) {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_5, initWithJavaLangReflectType_, capture$0)
}

GsonConstructorConstructor_5 *create_GsonConstructorConstructor_5_initWithJavaLangReflectType_(id<JavaLangReflectType> capture$0) {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_5, initWithJavaLangReflectType_, capture$0)
}

@implementation GsonConstructorConstructor_6

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_6_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilLinkedHashSet_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_6 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_6;
}

@end

void GsonConstructorConstructor_6_init(GsonConstructorConstructor_6 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_6 *new_GsonConstructorConstructor_6_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_6, init)
}

GsonConstructorConstructor_6 *create_GsonConstructorConstructor_6_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_6, init)
}

@implementation GsonConstructorConstructor_7

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_7_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilArrayDeque_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_7 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_7;
}

@end

void GsonConstructorConstructor_7_init(GsonConstructorConstructor_7 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_7 *new_GsonConstructorConstructor_7_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_7, init)
}

GsonConstructorConstructor_7 *create_GsonConstructorConstructor_7_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_7, init)
}

@implementation GsonConstructorConstructor_8

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_8_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilArrayList_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_8 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_8;
}

@end

void GsonConstructorConstructor_8_init(GsonConstructorConstructor_8 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_8 *new_GsonConstructorConstructor_8_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_8, init)
}

GsonConstructorConstructor_8 *create_GsonConstructorConstructor_8_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_8, init)
}

@implementation GsonConstructorConstructor_9

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_9_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilConcurrentConcurrentSkipListMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_9 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_9;
}

@end

void GsonConstructorConstructor_9_init(GsonConstructorConstructor_9 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_9 *new_GsonConstructorConstructor_9_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_9, init)
}

GsonConstructorConstructor_9 *create_GsonConstructorConstructor_9_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_9, init)
}

@implementation GsonConstructorConstructor_10

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_10_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilConcurrentConcurrentHashMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_10 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_10;
}

@end

void GsonConstructorConstructor_10_init(GsonConstructorConstructor_10 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_10 *new_GsonConstructorConstructor_10_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_10, init)
}

GsonConstructorConstructor_10 *create_GsonConstructorConstructor_10_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_10, init)
}

@implementation GsonConstructorConstructor_11

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_11_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilTreeMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_11 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_11;
}

@end

void GsonConstructorConstructor_11_init(GsonConstructorConstructor_11 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_11 *new_GsonConstructorConstructor_11_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_11, init)
}

GsonConstructorConstructor_11 *create_GsonConstructorConstructor_11_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_11, init)
}

@implementation GsonConstructorConstructor_12

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_12_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_JavaUtilLinkedHashMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_12 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_12;
}

@end

void GsonConstructorConstructor_12_init(GsonConstructorConstructor_12 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_12 *new_GsonConstructorConstructor_12_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_12, init)
}

GsonConstructorConstructor_12 *create_GsonConstructorConstructor_12_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_12, init)
}

@implementation GsonConstructorConstructor_13

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonConstructorConstructor_13_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)construct {
  return new_GsonLinkedTreeMap_init();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()TT;", "LGsonConstructorConstructor;", "newDefaultImplementationConstructorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_13 = { "", "com.google.gson.internal", ptrTable, methods, NULL, 7, 0x8018, 2, 0, 1, -1, 2, 3, -1 };
  return &_GsonConstructorConstructor_13;
}

@end

void GsonConstructorConstructor_13_init(GsonConstructorConstructor_13 *self) {
  NSObject_init(self);
}

GsonConstructorConstructor_13 *new_GsonConstructorConstructor_13_init() {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_13, init)
}

GsonConstructorConstructor_13 *create_GsonConstructorConstructor_13_init() {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_13, init)
}

@implementation GsonConstructorConstructor_14

- (instancetype)initWithIOSClass:(IOSClass *)capture$0
         withJavaLangReflectType:(id<JavaLangReflectType>)capture$1 {
  GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(self, capture$0, capture$1);
  return self;
}

- (id)construct {
  @try {
    id newInstance = [((GsonUnsafeAllocator *) nil_chk(unsafeAllocator_)) newInstanceWithIOSClass:val$rawType_];
    return newInstance;
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSString_withJavaLangThrowable_((JreStrcat("$@$", @"Unable to invoke no-args constructor for ", val$type_, @". Registering an InstanceCreator with Gson for this type may fix this problem.")), e);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 0, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  methods[0].selector = @selector(initWithIOSClass:withJavaLangReflectType:);
  methods[1].selector = @selector(construct);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "val$rawType_", "LIOSClass;", .constantValue.asLong = 0, 0x1012, -1, -1, 1, -1 },
    { "val$type_", "LJavaLangReflectType;", .constantValue.asLong = 0, 0x1012, -1, -1, -1, -1 },
    { "unsafeAllocator_", "LGsonUnsafeAllocator;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "()TT;", "Ljava/lang/Class<-TT;>;", "LGsonConstructorConstructor;", "newUnsafeAllocatorWithJavaLangReflectType:withIOSClass:", "Ljava/lang/Object;Lcom/google/gson/internal/ObjectConstructor<TT;>;" };
  static const J2ObjcClassInfo _GsonConstructorConstructor_14 = { "", "com.google.gson.internal", ptrTable, methods, fields, 7, 0x8018, 2, 3, 2, -1, 3, 4, -1 };
  return &_GsonConstructorConstructor_14;
}

@end

void GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(GsonConstructorConstructor_14 *self, IOSClass *capture$0, id<JavaLangReflectType> capture$1) {
  self->val$rawType_ = capture$0;
  self->val$type_ = capture$1;
  NSObject_init(self);
  self->unsafeAllocator_ = GsonUnsafeAllocator_create();
}

GsonConstructorConstructor_14 *new_GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_NEW_IMPL(GsonConstructorConstructor_14, initWithIOSClass_withJavaLangReflectType_, capture$0, capture$1)
}

GsonConstructorConstructor_14 *create_GsonConstructorConstructor_14_initWithIOSClass_withJavaLangReflectType_(IOSClass *capture$0, id<JavaLangReflectType> capture$1) {
  J2OBJC_CREATE_IMPL(GsonConstructorConstructor_14, initWithIOSClass_withJavaLangReflectType_, capture$0, capture$1)
}
