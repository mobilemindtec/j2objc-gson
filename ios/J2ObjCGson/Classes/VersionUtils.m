//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/VersionUtils.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "VersionUtils.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"

@interface ComGoogleGsonUtilVersionUtils ()

+ (jint)determineMajorJavaVersion;

@end

inline jint ComGoogleGsonUtilVersionUtils_get_majorJavaVersion(void);
static jint ComGoogleGsonUtilVersionUtils_majorJavaVersion;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComGoogleGsonUtilVersionUtils, majorJavaVersion, jint)

__attribute__((unused)) static jint ComGoogleGsonUtilVersionUtils_determineMajorJavaVersion(void);

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonUtilVersionUtils)

@implementation ComGoogleGsonUtilVersionUtils

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonUtilVersionUtils_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jint)determineMajorJavaVersion {
  return ComGoogleGsonUtilVersionUtils_determineMajorJavaVersion();
}

+ (jint)getMajorJavaVersion {
  return ComGoogleGsonUtilVersionUtils_getMajorJavaVersion();
}

+ (jboolean)isJava9OrLater {
  return ComGoogleGsonUtilVersionUtils_isJava9OrLater();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(determineMajorJavaVersion);
  methods[2].selector = @selector(getMajorJavaVersion);
  methods[3].selector = @selector(isJava9OrLater);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "majorJavaVersion", "I", .constantValue.asLong = 0, 0x1a, -1, 0, -1, -1 },
  };
  static const void *ptrTable[] = { &ComGoogleGsonUtilVersionUtils_majorJavaVersion };
  static const J2ObjcClassInfo _ComGoogleGsonUtilVersionUtils = { "VersionUtils", "com.google.gson.util", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonUtilVersionUtils;
}

+ (void)initialize {
  if (self == [ComGoogleGsonUtilVersionUtils class]) {
    ComGoogleGsonUtilVersionUtils_majorJavaVersion = ComGoogleGsonUtilVersionUtils_determineMajorJavaVersion();
    J2OBJC_SET_INITIALIZED(ComGoogleGsonUtilVersionUtils)
  }
}

@end

void ComGoogleGsonUtilVersionUtils_init(ComGoogleGsonUtilVersionUtils *self) {
  NSObject_init(self);
}

ComGoogleGsonUtilVersionUtils *new_ComGoogleGsonUtilVersionUtils_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonUtilVersionUtils, init)
}

ComGoogleGsonUtilVersionUtils *create_ComGoogleGsonUtilVersionUtils_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonUtilVersionUtils, init)
}

jint ComGoogleGsonUtilVersionUtils_determineMajorJavaVersion() {
  ComGoogleGsonUtilVersionUtils_initialize();
  IOSObjectArray *parts = [((NSString *) nil_chk(JavaLangSystem_getPropertyWithNSString_(@"java.version"))) java_split:@"[._]"];
  jint firstVer = JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(nil_chk(parts), 0));
  if (firstVer == 1 && parts->size_ > 1) {
    return JavaLangInteger_parseIntWithNSString_(IOSObjectArray_Get(parts, 1));
  }
  else {
    return firstVer;
  }
}

jint ComGoogleGsonUtilVersionUtils_getMajorJavaVersion() {
  ComGoogleGsonUtilVersionUtils_initialize();
  return ComGoogleGsonUtilVersionUtils_majorJavaVersion;
}

jboolean ComGoogleGsonUtilVersionUtils_isJava9OrLater() {
  ComGoogleGsonUtilVersionUtils_initialize();
  return ComGoogleGsonUtilVersionUtils_majorJavaVersion >= 9;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonUtilVersionUtils)
