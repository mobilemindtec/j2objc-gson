//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/UnsafeAllocator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_UnsafeAllocator")
#ifdef RESTRICT_UnsafeAllocator
#define INCLUDE_ALL_UnsafeAllocator 0
#else
#define INCLUDE_ALL_UnsafeAllocator 1
#endif
#undef RESTRICT_UnsafeAllocator

#if !defined (GsonUnsafeAllocator_) && (INCLUDE_ALL_UnsafeAllocator || defined(INCLUDE_GsonUnsafeAllocator))
#define GsonUnsafeAllocator_

@class IOSClass;

@interface GsonUnsafeAllocator : NSObject

#pragma mark Public

- (instancetype)init;

+ (GsonUnsafeAllocator *)create;

- (id)newInstanceWithIOSClass:(IOSClass *)c OBJC_METHOD_FAMILY_NONE;

#pragma mark Package-Private

+ (void)assertInstantiableWithIOSClass:(IOSClass *)c;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonUnsafeAllocator)

FOUNDATION_EXPORT void GsonUnsafeAllocator_init(GsonUnsafeAllocator *self);

FOUNDATION_EXPORT GsonUnsafeAllocator *GsonUnsafeAllocator_create(void);

FOUNDATION_EXPORT void GsonUnsafeAllocator_assertInstantiableWithIOSClass_(IOSClass *c);

J2OBJC_TYPE_LITERAL_HEADER(GsonUnsafeAllocator)

@compatibility_alias ComGoogleGsonInternalUnsafeAllocator GsonUnsafeAllocator;

#endif

#pragma pop_macro("INCLUDE_ALL_UnsafeAllocator")
