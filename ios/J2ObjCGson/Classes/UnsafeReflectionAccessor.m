//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/UnsafeReflectionAccessor.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "ReflectionAccessor.h"
#include "UnsafeReflectionAccessor.h"
#include "java/lang/Exception.h"
#include "java/lang/NoSuchFieldException.h"
#include "java/lang/reflect/AccessibleObject.h"
#include "java/lang/reflect/Field.h"
#include "sun/misc/Unsafe.h"

@interface ComGoogleGsonInternalReflectUnsafeReflectionAccessor () {
 @public
  SunMiscUnsafe *theUnsafe_;
  JavaLangReflectField *overrideField_;
}

+ (SunMiscUnsafe *)getUnsafeInstance;

+ (JavaLangReflectField *)getOverrideField;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonInternalReflectUnsafeReflectionAccessor, theUnsafe_, SunMiscUnsafe *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalReflectUnsafeReflectionAccessor, overrideField_, JavaLangReflectField *)

__attribute__((unused)) static SunMiscUnsafe *ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getUnsafeInstance(void);

__attribute__((unused)) static JavaLangReflectField *ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getOverrideField(void);

@implementation ComGoogleGsonInternalReflectUnsafeReflectionAccessor

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalReflectUnsafeReflectionAccessor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)makeAccessibleWithJavaLangReflectAccessibleObject:(JavaLangReflectAccessibleObject *)ao {
  if (theUnsafe_ != nil && overrideField_ != nil) {
    jlong overrideOffset = [theUnsafe_ objectFieldOffsetWithJavaLangReflectField:overrideField_];
    [theUnsafe_ putBooleanWithId:ao withLong:overrideOffset withBoolean:true];
  }
}

+ (SunMiscUnsafe *)getUnsafeInstance {
  return ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getUnsafeInstance();
}

+ (JavaLangReflectField *)getOverrideField {
  return ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getOverrideField();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LSunMiscUnsafe;", 0xa, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0xa, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(makeAccessibleWithJavaLangReflectAccessibleObject:);
  methods[2].selector = @selector(getUnsafeInstance);
  methods[3].selector = @selector(getOverrideField);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "theUnsafe_", "LSunMiscUnsafe;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "overrideField_", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "makeAccessible", "LJavaLangReflectAccessibleObject;" };
  static const J2ObjcClassInfo _ComGoogleGsonInternalReflectUnsafeReflectionAccessor = { "UnsafeReflectionAccessor", "com.google.gson.internal.reflect", ptrTable, methods, fields, 7, 0x10, 4, 2, -1, -1, -1, -1, -1 };
  return &_ComGoogleGsonInternalReflectUnsafeReflectionAccessor;
}

@end

void ComGoogleGsonInternalReflectUnsafeReflectionAccessor_init(ComGoogleGsonInternalReflectUnsafeReflectionAccessor *self) {
  ComGoogleGsonInternalReflectReflectionAccessor_init(self);
  self->theUnsafe_ = ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getUnsafeInstance();
  self->overrideField_ = ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getOverrideField();
}

ComGoogleGsonInternalReflectUnsafeReflectionAccessor *new_ComGoogleGsonInternalReflectUnsafeReflectionAccessor_init() {
  J2OBJC_NEW_IMPL(ComGoogleGsonInternalReflectUnsafeReflectionAccessor, init)
}

ComGoogleGsonInternalReflectUnsafeReflectionAccessor *create_ComGoogleGsonInternalReflectUnsafeReflectionAccessor_init() {
  J2OBJC_CREATE_IMPL(ComGoogleGsonInternalReflectUnsafeReflectionAccessor, init)
}

SunMiscUnsafe *ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getUnsafeInstance() {
  ComGoogleGsonInternalReflectUnsafeReflectionAccessor_initialize();
  @try {
    JavaLangReflectField *unsafeField = [SunMiscUnsafe_class_() getDeclaredField:@"theUnsafe"];
    [((JavaLangReflectField *) nil_chk(unsafeField)) setAccessibleWithBoolean:true];
    return (SunMiscUnsafe *) cast_chk([unsafeField getWithId:nil], [SunMiscUnsafe class]);
  }
  @catch (JavaLangException *e) {
    [e printStackTrace];
    return nil;
  }
}

JavaLangReflectField *ComGoogleGsonInternalReflectUnsafeReflectionAccessor_getOverrideField() {
  ComGoogleGsonInternalReflectUnsafeReflectionAccessor_initialize();
  @try {
    return [JavaLangReflectAccessibleObject_class_() getDeclaredField:@"override"];
  }
  @catch (JavaLangNoSuchFieldException *e) {
    [e printStackTrace];
    return nil;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalReflectUnsafeReflectionAccessor)
