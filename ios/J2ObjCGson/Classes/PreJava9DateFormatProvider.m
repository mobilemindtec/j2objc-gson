//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/PreJava9DateFormatProvider.java
//

#include "J2ObjC_source.h"
#include "PreJava9DateFormatProvider.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/text/DateFormat.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Locale.h"

@interface GsonPreJava9DateFormatProvider ()

+ (NSString *)getDateFormatPatternWithInt:(jint)style;

+ (NSString *)getDatePartOfDateTimePatternWithInt:(jint)dateStyle;

+ (NSString *)getTimePartOfDateTimePatternWithInt:(jint)timeStyle;

@end

__attribute__((unused)) static NSString *GsonPreJava9DateFormatProvider_getDateFormatPatternWithInt_(jint style);

__attribute__((unused)) static NSString *GsonPreJava9DateFormatProvider_getDatePartOfDateTimePatternWithInt_(jint dateStyle);

__attribute__((unused)) static NSString *GsonPreJava9DateFormatProvider_getTimePartOfDateTimePatternWithInt_(jint timeStyle);

@implementation GsonPreJava9DateFormatProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  GsonPreJava9DateFormatProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (JavaTextDateFormat *)getUSDateFormatWithInt:(jint)style {
  return GsonPreJava9DateFormatProvider_getUSDateFormatWithInt_(style);
}

+ (JavaTextDateFormat *)getUSDateTimeFormatWithInt:(jint)dateStyle
                                           withInt:(jint)timeStyle {
  return GsonPreJava9DateFormatProvider_getUSDateTimeFormatWithInt_withInt_(dateStyle, timeStyle);
}

+ (NSString *)getDateFormatPatternWithInt:(jint)style {
  return GsonPreJava9DateFormatProvider_getDateFormatPatternWithInt_(style);
}

+ (NSString *)getDatePartOfDateTimePatternWithInt:(jint)dateStyle {
  return GsonPreJava9DateFormatProvider_getDatePartOfDateTimePatternWithInt_(dateStyle);
}

+ (NSString *)getTimePartOfDateTimePatternWithInt:(jint)timeStyle {
  return GsonPreJava9DateFormatProvider_getTimePartOfDateTimePatternWithInt_(timeStyle);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaTextDateFormat;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaTextDateFormat;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 4, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 5, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xa, 6, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getUSDateFormatWithInt:);
  methods[2].selector = @selector(getUSDateTimeFormatWithInt:withInt:);
  methods[3].selector = @selector(getDateFormatPatternWithInt:);
  methods[4].selector = @selector(getDatePartOfDateTimePatternWithInt:);
  methods[5].selector = @selector(getTimePartOfDateTimePatternWithInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "getUSDateFormat", "I", "getUSDateTimeFormat", "II", "getDateFormatPattern", "getDatePartOfDateTimePattern", "getTimePartOfDateTimePattern" };
  static const J2ObjcClassInfo _GsonPreJava9DateFormatProvider = { "PreJava9DateFormatProvider", "j2objc.gson.internal", ptrTable, methods, NULL, 7, 0x1, 6, 0, -1, -1, -1, -1, -1 };
  return &_GsonPreJava9DateFormatProvider;
}

@end

void GsonPreJava9DateFormatProvider_init(GsonPreJava9DateFormatProvider *self) {
  NSObject_init(self);
}

GsonPreJava9DateFormatProvider *new_GsonPreJava9DateFormatProvider_init() {
  J2OBJC_NEW_IMPL(GsonPreJava9DateFormatProvider, init)
}

GsonPreJava9DateFormatProvider *create_GsonPreJava9DateFormatProvider_init() {
  J2OBJC_CREATE_IMPL(GsonPreJava9DateFormatProvider, init)
}

JavaTextDateFormat *GsonPreJava9DateFormatProvider_getUSDateFormatWithInt_(jint style) {
  GsonPreJava9DateFormatProvider_initialize();
  return new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(GsonPreJava9DateFormatProvider_getDateFormatPatternWithInt_(style), JreLoadStatic(JavaUtilLocale, US));
}

JavaTextDateFormat *GsonPreJava9DateFormatProvider_getUSDateTimeFormatWithInt_withInt_(jint dateStyle, jint timeStyle) {
  GsonPreJava9DateFormatProvider_initialize();
  NSString *pattern = JreStrcat("$C$", GsonPreJava9DateFormatProvider_getDatePartOfDateTimePatternWithInt_(dateStyle), ' ', GsonPreJava9DateFormatProvider_getTimePartOfDateTimePatternWithInt_(timeStyle));
  return new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(pattern, JreLoadStatic(JavaUtilLocale, US));
}

NSString *GsonPreJava9DateFormatProvider_getDateFormatPatternWithInt_(jint style) {
  GsonPreJava9DateFormatProvider_initialize();
  switch (style) {
    case JavaTextDateFormat_SHORT:
    return @"M/d/yy";
    case JavaTextDateFormat_MEDIUM:
    return @"MMM d, y";
    case JavaTextDateFormat_LONG:
    return @"MMMM d, y";
    case JavaTextDateFormat_FULL:
    return @"EEEE, MMMM d, y";
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Unknown DateFormat style: ", style));
  }
}

NSString *GsonPreJava9DateFormatProvider_getDatePartOfDateTimePatternWithInt_(jint dateStyle) {
  GsonPreJava9DateFormatProvider_initialize();
  switch (dateStyle) {
    case JavaTextDateFormat_SHORT:
    return @"M/d/yy";
    case JavaTextDateFormat_MEDIUM:
    return @"MMM d, yyyy";
    case JavaTextDateFormat_LONG:
    return @"MMMM d, yyyy";
    case JavaTextDateFormat_FULL:
    return @"EEEE, MMMM d, yyyy";
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Unknown DateFormat style: ", dateStyle));
  }
}

NSString *GsonPreJava9DateFormatProvider_getTimePartOfDateTimePatternWithInt_(jint timeStyle) {
  GsonPreJava9DateFormatProvider_initialize();
  switch (timeStyle) {
    case JavaTextDateFormat_SHORT:
    return @"h:mm a";
    case JavaTextDateFormat_MEDIUM:
    return @"h:mm:ss a";
    case JavaTextDateFormat_FULL:
    case JavaTextDateFormat_LONG:
    return @"h:mm:ss a z";
    default:
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I", @"Unknown DateFormat style: ", timeStyle));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(GsonPreJava9DateFormatProvider)

J2OBJC_NAME_MAPPING(GsonPreJava9DateFormatProvider, "j2objc.gson.internal", "Gson")
