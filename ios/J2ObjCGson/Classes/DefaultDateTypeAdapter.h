//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/DefaultDateTypeAdapter.java
//

#ifndef DefaultDateTypeAdapter_H
#define DefaultDateTypeAdapter_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "TypeAdapter.h"

@class GsonJsonElement;
@class GsonJsonReader;
@class GsonJsonWriter;
@class IOSClass;
@class JavaIoReader;
@class JavaUtilDate;

@interface GsonDefaultDateTypeAdapter : GsonTypeAdapter

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)dateType
                                   withInt:(jint)dateStyle
                                   withInt:(jint)timeStyle;

- (instancetype __nonnull)initWithInt:(jint)dateStyle
                              withInt:(jint)timeStyle;

- (JavaUtilDate *)fromJsonTreeWithGsonJsonElement:(GsonJsonElement *)arg0;

- (JavaUtilDate *)fromJsonWithJavaIoReader:(JavaIoReader *)arg0;

- (JavaUtilDate *)fromJsonWithNSString:(NSString *)arg0;

- (JavaUtilDate *)readWithGsonJsonReader:(GsonJsonReader *)inArg;

- (NSString *)description;

- (void)writeWithGsonJsonWriter:(GsonJsonWriter *)outArg
                         withId:(JavaUtilDate *)value;

#pragma mark Package-Private

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)dateType;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)dateType
                                   withInt:(jint)style;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)dateType
                              withNSString:(NSString *)datePattern;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonDefaultDateTypeAdapter)

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_(IOSClass *dateType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_(IOSClass *dateType);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_withNSString_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType, NSString *datePattern);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_withNSString_(IOSClass *dateType, NSString *datePattern) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_withNSString_(IOSClass *dateType, NSString *datePattern);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType, jint style);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_(IOSClass *dateType, jint style) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_(IOSClass *dateType, jint style);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithInt_withInt_(GsonDefaultDateTypeAdapter *self, jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithInt_withInt_(jint dateStyle, jint timeStyle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithInt_withInt_(jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT void GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_withInt_(GsonDefaultDateTypeAdapter *self, IOSClass *dateType, jint dateStyle, jint timeStyle);

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *new_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_withInt_(IOSClass *dateType, jint dateStyle, jint timeStyle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonDefaultDateTypeAdapter *create_GsonDefaultDateTypeAdapter_initWithIOSClass_withInt_withInt_(IOSClass *dateType, jint dateStyle, jint timeStyle);

J2OBJC_TYPE_LITERAL_HEADER(GsonDefaultDateTypeAdapter)

@compatibility_alias ComGoogleGsonDefaultDateTypeAdapter GsonDefaultDateTypeAdapter;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // DefaultDateTypeAdapter_H
