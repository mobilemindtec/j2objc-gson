//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: ./build/j2objc/java/JsonIOException.java
//

#ifndef JsonIOException_H
#define JsonIOException_H

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability"
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#include "J2ObjC_header.h"
#include "JsonParseException.h"

@class JavaLangThrowable;

@interface GsonJsonIOException : GsonJsonParseException

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)cause;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)cause;

@end

J2OBJC_EMPTY_STATIC_INIT(GsonJsonIOException)

FOUNDATION_EXPORT void GsonJsonIOException_initWithNSString_(GsonJsonIOException *self, NSString *msg);

FOUNDATION_EXPORT GsonJsonIOException *new_GsonJsonIOException_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonIOException *create_GsonJsonIOException_initWithNSString_(NSString *msg);

FOUNDATION_EXPORT void GsonJsonIOException_initWithNSString_withJavaLangThrowable_(GsonJsonIOException *self, NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT GsonJsonIOException *new_GsonJsonIOException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonIOException *create_GsonJsonIOException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *cause);

FOUNDATION_EXPORT void GsonJsonIOException_initWithJavaLangThrowable_(GsonJsonIOException *self, JavaLangThrowable *cause);

FOUNDATION_EXPORT GsonJsonIOException *new_GsonJsonIOException_initWithJavaLangThrowable_(JavaLangThrowable *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT GsonJsonIOException *create_GsonJsonIOException_initWithJavaLangThrowable_(JavaLangThrowable *cause);

J2OBJC_TYPE_LITERAL_HEADER(GsonJsonIOException)

@compatibility_alias ComGoogleGsonJsonIOException GsonJsonIOException;


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#endif // JsonIOException_H
